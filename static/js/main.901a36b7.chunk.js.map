{"version":3,"sources":["сontainers/MainPage/MainPage.module.scss","components/Loader/Loader.module.scss","сontainers/PokemonDetail/PokemonDetail.module.scss","store/reselect/selector.js","components/Loader/Loader.jsx","сontainers/PokemonDetail/PokemonDetail.jsx","store/action/action.js","store/actionTypes.js","components/Pokemon/Pokemon.jsx","components/PokemonList/PokemonList.js","сontainers/MainPage/MainPage.jsx","App.js","serviceWorker.js","store/reducer/reducer.js","index.js","components/PokemonList/PokemonList.module.scss","components/Pokemon/Pokemon.module.scss"],"names":["module","exports","pokemonGetUrl","state","pokemonDetailUrl","Loader","className","classes","loader","PokemonDetail","pokemonDetail","loading","showError","fetchPokemonDetail","urlPokemon","a","setState","fetch","headers","response","json","result","name","stats","sprites","id","img","front_shiny","prevProps","this","props","pokemonUrl","showDetail","Fragment","src","alt","pokemonDetail__img","map","el","pokemonDetail__item","key","uuid","pokemonDetail__item_key","stat","pokemonDetail__item_value","base_stat","detail__wrapper","Component","connect","setPokemonUrl","url","type","res","defaultColor","dispatch","actions","bindActionCreators","pokemonInfo","pokemonItem","pokemonItem__detail","onClick","pokemonItem__img","image","pokemonItem__character","types","pokemonItem__types","style","backgroundImage","PokemonList","savedPokemons","pokemonList","offsetQuantity","filterByValue","filterBy","getPokemons","tempList","results","item","pokemonResponse","pokemonResult","formingFilterChanger","Promise","all","prevState","onFilterPokemonList","onLoadMoreHandler","typePokemon","forEach","some","checkItem","push","typeItem","onChangeFilterValue","event","filterValue","target","value","main__list","main__list_filter","onChange","error","length","main__items","main__loader","main__nextPage","MainPage","main","main__header","main__content","App","Boolean","window","location","hostname","match","initialState","reducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.901a36b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__header\":\"MainPage_main__header__3T8nN\",\"main__content\":\"MainPage_main__content__2pOUS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1iUdJ\",\"load3\":\"Loader_load3__1fTKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail__wrapper\":\"PokemonDetail_detail__wrapper__nFvKb\",\"pokemonDetail\":\"PokemonDetail_pokemonDetail__1cC6r\",\"pokemonDetail__img\":\"PokemonDetail_pokemonDetail__img__2F7_o\",\"pokemonDetail__item\":\"PokemonDetail_pokemonDetail__item__xs9h2\",\"pokemonDetail__item_key\":\"PokemonDetail_pokemonDetail__item_key__2krJq\",\"pokemonDetail__item_value\":\"PokemonDetail_pokemonDetail__item_value__V_TC5\"};","export const pokemonGetUrl = state => state.pokemonDetailUrl;","import React from 'react';\r\nimport classes from './Loader.module.scss';\r\n\r\nconst Loader = () => <div className={classes.loader}>Loading...</div>;\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v1 as uuid } from \"uuid\"\r\n\r\nimport { pokemonGetUrl } from '../../store/reselect/selector';\r\nimport classes from './PokemonDetail.module.scss';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nclass PokemonDetail extends Component {\r\n\r\n    state = {\r\n        pokemonDetail: null,\r\n        loading: false,\r\n        showError: false,\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { fetchPokemonDetail, props } = this;\r\n        if (prevProps.pokemonUrl !== props.pokemonUrl) {\r\n            fetchPokemonDetail(props.pokemonUrl);\r\n        };\r\n    };\r\n\r\n    fetchPokemonDetail = async (urlPokemon) => {\r\n        try {\r\n            this.setState({\r\n                loading: true\r\n            });\r\n            const response = await fetch(`${urlPokemon}`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            });\r\n            const result = await response.json();\r\n            const { name, stats, sprites, id } = result;\r\n\r\n            this.setState({\r\n                pokemonDetail: {\r\n                    name: name,\r\n                    img: sprites.front_shiny,\r\n                    stats: [...stats],\r\n                    id: id\r\n                }\r\n            });\r\n        } catch (err) {\r\n            this.setState({\r\n                showError: true,\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { pokemonDetail, loading, showError } = this.state;\r\n\r\n        let showDetail = <p>Choose pokemon to see details</p>;\r\n        if (loading) showDetail = <Loader />\r\n        else if (showError) showDetail = <p>Something goes wrong</p>\r\n        else if (pokemonDetail !== null) {\r\n            showDetail = (\r\n                <React.Fragment>\r\n                    <img src={pokemonDetail.img} alt=\"pokemonImg\" className={classes.pokemonDetail__img} />\r\n                    <h3>{pokemonDetail.name} #{pokemonDetail.id}</h3>\r\n                    {pokemonDetail.stats.map(el => (\r\n                        <p className={classes.pokemonDetail__item} key={uuid()}>\r\n                            <span className={classes.pokemonDetail__item_key}>{el.stat.name}</span>\r\n                            <span className={classes.pokemonDetail__item_value}>{el.base_stat}</span>\r\n                        </p>\r\n                    ))}\r\n                </React.Fragment>\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div className={classes.detail__wrapper}>\r\n                <div className={classes.pokemonDetail} >\r\n                    {showDetail}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        pokemonUrl: pokemonGetUrl(state)\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PokemonDetail);","import * as actionTypes from '../actionTypes';\r\n\r\nexport const setPokemonUrl = url => {\r\n    return {\r\n        type: actionTypes.SET_POKEMON_URL,\r\n        res: url\r\n    };\r\n};","// get detail for pokemon\r\nexport const SET_POKEMON_URL = \"SET_POKEMON_URL\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v1 as uuid } from \"uuid\"\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { setPokemonUrl } from '../../store/action/action';\r\nimport classes from './Pokemon.module.scss';\r\n\r\nconst defaultColor = {\r\n    'poison': 'mediumslateblue',\r\n    'grass': 'peru',\r\n    'fire': 'gold',\r\n    'flying': 'papayawhip',\r\n    'water': 'blue',\r\n    'bug': 'indianred',\r\n    'normal': 'lightsteelblue',\r\n    'ground': 'olive',\r\n    'electric': 'saddlebrown'\r\n}\r\n\r\nconst Pokemon = (props) => {\r\n    const { pokemonInfo, actions } = props;\r\n    const onPokemonClick = res => actions.setPokemonUrl(res);\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.pokemonItem}>\r\n                <div\r\n                    className={classes.pokemonItem__detail}\r\n                    onClick={() => onPokemonClick(pokemonInfo.url)}\r\n                >\r\n                </div>\r\n                <img\r\n                    className={classes.pokemonItem__img}\r\n                    src={pokemonInfo.image}\r\n                    alt=\"img\" />\r\n                <h3>{pokemonInfo.name}</h3>\r\n                <p className={classes.pokemonItem__character}>\r\n                    {[...pokemonInfo.types].map(el => <span\r\n                        key={uuid()}\r\n                        className={classes.pokemonItem__types}\r\n                        style={{ backgroundImage: `linear-gradient(to bottom, #cfe7fa -15%, ${defaultColor[el.type.name]} 100%)` }}>\r\n                        {el.type.name}</span>)}\r\n                </p>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators(\r\n        {\r\n            setPokemonUrl\r\n        },\r\n        dispatch\r\n    )\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Pokemon);","import React, { Component } from 'react';\r\nimport { v1 as uuid } from \"uuid\"\r\n\r\nimport Loader from '../Loader/Loader';\r\nimport classes from './PokemonList.module.scss';\r\nimport Pokemon from '../Pokemon/Pokemon';\r\n\r\nclass PokemonList extends Component {\r\n\r\n    state = {\r\n        savedPokemons: [],\r\n        pokemonList: [],\r\n        offsetQuantity: 0,\r\n        loading: false,\r\n        showError: false,\r\n        filterByValue: 'all',\r\n        filterBy: ['all']\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPokemons();\r\n    };\r\n\r\n    getPokemons = async () => {\r\n        const { offsetQuantity } = this.state;\r\n        try {\r\n            this.setState({\r\n                loading: true\r\n            });\r\n\r\n            const response = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=12&offset=${offsetQuantity}`);\r\n            const result = await response.json();\r\n\r\n            const tempList = [...result.results].map(async (item) => {\r\n                let pokemonInfo = {};\r\n                const pokemonResponse = await fetch(`${item.url}`);\r\n                const pokemonResult = await pokemonResponse.json();\r\n                const { types, name, sprites } = pokemonResult;\r\n\r\n                this.formingFilterChanger(types);\r\n\r\n                pokemonInfo = {\r\n                    'name': name,\r\n                    'types': types,\r\n                    'image': sprites.front_shiny,\r\n                    'url': item.url\r\n                };\r\n                return pokemonInfo;\r\n            });\r\n\r\n            const res = await Promise.all(tempList);\r\n            this.setState(prevState => ({\r\n                pokemonList: [...prevState.pokemonList, ...res],\r\n                savedPokemons: [...prevState.savedPokemons, ...res]\r\n            }));\r\n            this.onFilterPokemonList();\r\n        } catch (error) {\r\n            this.setState({\r\n                showError: true\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false,\r\n                offsetQuantity: offsetQuantity + 12\r\n            });\r\n        }\r\n    };\r\n\r\n    onLoadMoreHandler = () => {\r\n        this.getPokemons();\r\n    };\r\n\r\n    formingFilterChanger = (typePokemon) => {\r\n        const { filterBy } = this.state;\r\n        typePokemon.forEach(item => {\r\n            let res = filterBy.some(checkItem => checkItem === item.type.name ? true : false);\r\n            if (!res) filterBy.push(item.type.name);\r\n        });\r\n\r\n        this.setState({\r\n            filterBy: filterBy\r\n        });\r\n    };\r\n\r\n    onFilterPokemonList = () => {\r\n        const { savedPokemons, filterByValue } = this.state;\r\n        const tempList = [];\r\n        if (filterByValue === 'all') {\r\n            this.setState({\r\n                pokemonList: savedPokemons\r\n            });\r\n            return false;\r\n        };\r\n        savedPokemons.forEach(pokemonItem => {\r\n            pokemonItem.types.forEach(typeItem => {\r\n                if (typeItem.type.name === filterByValue) tempList.push(pokemonItem);\r\n            });\r\n        });\r\n\r\n        this.setState({\r\n            pokemonList: tempList\r\n        });\r\n    };\r\n\r\n    onChangeFilterValue = (event) => {\r\n        const filterValue = event.target.value;\r\n        this.setState({\r\n            filterByValue: filterValue\r\n        }, () => {\r\n            this.onFilterPokemonList();\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { pokemonList, showError, loading, filterBy, filterByValue } = this.state;\r\n        return (\r\n            <div className={classes.main__list}>\r\n                <div className={classes.main__list_filter}>\r\n                    <select value={filterByValue} onChange={this.onChangeFilterValue}>\r\n                        {filterBy.map(el => {\r\n                            return (\r\n                                <option value={el} key={uuid()}>{el}</option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                {showError && <p className={classes.error}>Something goes wrong</p>}\r\n                {pokemonList.length > 0 && <div className={classes.main__items}>\r\n                    {pokemonList.map(item => <Pokemon\r\n                        pokemonInfo={item}\r\n                        key={uuid()} />)}\r\n                </div>}\r\n\r\n                {loading && <div className={classes.main__loader}><Loader /></div>}\r\n                {pokemonList.length > 0 && <button onClick={this.onLoadMoreHandler} className={classes.main__nextPage}>Load More</button>}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default PokemonList;","import React from 'react';\r\n\r\nimport PokemonDetail from '../PokemonDetail/PokemonDetail';\r\nimport PokemonList from '../../components/PokemonList/PokemonList.js';\r\nimport classes from './MainPage.module.scss';\r\n\r\n\r\nconst MainPage = props => {\r\n    return (\r\n        <div className={classes.main}>\r\n            <header>\r\n                <h1 className={classes.main__header}>POKEDEX</h1>\r\n            </header>\r\n            <main className={classes.main__content}>\r\n                <PokemonList />\r\n                <PokemonDetail />\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;","import React from 'react';\nimport './App.scss';\n\nimport MainPage from './сontainers/MainPage/MainPage.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n    pokemonDetailUrl: ''\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_POKEMON_URL:\r\n            return {\r\n                ...state,\r\n                pokemonDetailUrl: action.res\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport reducer from './store/reducer/reducer';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducer);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__nextPage\":\"PokemonList_main__nextPage__1s_kb\",\"main__items\":\"PokemonList_main__items__18xj0\",\"main__list\":\"PokemonList_main__list__efr_P\",\"main__list_filter\":\"PokemonList_main__list_filter__1e49f\",\"error\":\"PokemonList_error__ivS2v\",\"main__loader\":\"PokemonList_main__loader__1w7dQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokemonItem\":\"Pokemon_pokemonItem__rsexJ\",\"pokemonItem__detail\":\"Pokemon_pokemonItem__detail__Nyw3j\",\"pokemonItem__character\":\"Pokemon_pokemonItem__character__F_bxR\",\"pokemonItem__img\":\"Pokemon_pokemonItem__img__1ch48\",\"pokemonItem__types\":\"Pokemon_pokemonItem__types__qqYt9\",\"slowShow\":\"Pokemon_slowShow__1hWKd\"};"],"sourceRoot":""}